export const MESSAGES = {
  required: 'Campo obrigatório',
  invalidEmail: 'E-mail inválido',
  createSuccess: 'Cadastro realizado com sucesso!',
  updateSuccess: 'Cadastro atualizado com sucesso!',
  genericError: 'Ocorreu um erro inesperado. Tente novamente.',
  deleteSuccess: 'Registro excluído com sucesso!',
  notFound: 'Registro não encontrado.',
  invalidDate: 'Data inválida',
  requiredDate: 'Data obrigatória',
  dateInFuture: 'A data não pode ser no futuro',
  dateInPast: 'A data não pode ser no passado',
  invalidDateFormat: 'Formato de data inválido (use dd/mm/aaaa)',
  // Adicione outras mensagens padronizadas conforme necessidade
};

export const empregadoDomesticoMessages = {
  pt: {
    required: 'Campo obrigatório',
    invalidEmail: 'E-mail inválido',
    createSuccess: 'Empregado doméstico cadastrado com sucesso!',
    updateSuccess: 'Empregado doméstico atualizado com sucesso!',
    genericError: 'Ocorreu um erro inesperado. Tente novamente.',
    deleteSuccess: 'Registro excluído com sucesso!',
    notFound: 'Registro não encontrado.',
    invalidDate: 'Data inválida',
    requiredDate: 'Data obrigatória',
    dateInFuture: 'A data não pode ser no futuro',
    dateInPast: 'A data não pode ser no passado',
    invalidDateFormat: 'Formato de data inválido (use dd/mm/aaaa)',
    invalidCPF: 'CPF inválido',
    invalidCEP: 'CEP inválido',
    invalidUF: 'UF deve ter 2 caracteres',
    invalidCTPSNumber: 'Número da CTPS inválido',
    invalidCTPSSeries: 'Série da CTPS inválida',
    invalidPIS: 'PIS/PASEP inválido',
    negativeSalary: 'Remuneração não pode ser negativa'
  },
  en: {
    required: 'Required field',
    invalidEmail: 'Invalid email',
    createSuccess: 'Domestic worker registered successfully!',
    updateSuccess: 'Domestic worker updated successfully!',
    genericError: 'An unexpected error occurred. Please try again.',
    deleteSuccess: 'Record deleted successfully!',
    notFound: 'Record not found.',
    invalidDate: 'Invalid date',
    requiredDate: 'Date is required',
    dateInFuture: 'Date cannot be in the future',
    dateInPast: 'Date cannot be in the past',
    invalidDateFormat: 'Invalid date format (use dd/mm/yyyy)',
    invalidCPF: 'Invalid CPF',
    invalidCEP: 'Invalid postal code',
    invalidUF: 'State must have 2 characters',
    invalidCTPSNumber: 'Invalid CTPS number',
    invalidCTPSSeries: 'Invalid CTPS series',
    invalidPIS: 'Invalid PIS/PASEP',
    negativeSalary: 'Salary cannot be negative'
  },
};

export const documentMessages = {
  pt: {
    filterType: 'Tipo',
    filterStatus: 'Status',
    filterGroup: 'Grupo',
    filterCategory: 'Categoria',
    filterSearch: 'Buscar documento',
    filterExpiresAt: 'Vencimento até',
    filterButton: 'Buscar',
    tableName: 'Nome',
    tableType: 'Tipo',
    tableUploadedAt: 'Data de Upload',
    tableExpiresAt: 'Vencimento',
    tableGroup: 'Grupo',
    tableStatus: 'Status',
    tableCategory: 'Categoria',
    tableActions: 'Ações',
    actionView: 'Visualizar',
    actionDownload: 'Baixar',
    actionDelete: 'Excluir',
    empty: 'Nenhum documento encontrado.',
    loading: 'Carregando documentos...',
    error: 'Erro ao buscar documentos. Tente novamente.',
  },
  en: {
    filterType: 'Type',
    filterStatus: 'Status',
    filterGroup: 'Group',
    filterCategory: 'Category',
    filterSearch: 'Search document',
    filterExpiresAt: 'Expires at',
    filterButton: 'Search',
    tableName: 'Name',
    tableType: 'Type',
    tableUploadedAt: 'Upload Date',
    tableExpiresAt: 'Expires',
    tableGroup: 'Group',
    tableStatus: 'Status',
    tableCategory: 'Category',
    tableActions: 'Actions',
    actionView: 'View',
    actionDownload: 'Download',
    actionDelete: 'Delete',
    empty: 'No documents found.',
    loading: 'Loading documents...',
    error: 'Error fetching documents. Please try again.',
  },
}; 